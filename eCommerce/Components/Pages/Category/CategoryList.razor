@page "/Category"
@inject ICategoryRepository _CategoryRepository
@inject IJSRuntime _JS
<BootstrapModal OnModalConfirmation="ConfirmDelete_Click"
    BootstrapButtonType="btn-danger"
    ButtonText="Delete"
    Title="Are you sure you want to delete catgeory?"
>
</BootstrapModal>
@if (IsProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/Loader.gif" alt="loading" />
    </div>
}
else
{
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-black bg-gradient ml-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">Category List</h2>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
            <div class="row pb-3">
                <div class="col-12 text-end">
                    <a href="Category/Create" class="btn btn-secondary btn-lg"><i class="bi bi-plus-square"></i> Add</a>
                </div>
            </div>
            @if(Categories.Any())
            {
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var cat in Categories)
                        {
                            <tr>
                                <td>@cat.Name</td>
                                <td>
                                    <a href="@($"Category/Update/{cat.Id}")" class="btn btn-primary"><i class="bi bi-pencil-square"></i> Edit</a>
                                    <button class="btn btn-danger" @onclick="()=>HandleDelete(cat.Id)"><i class="bi bi-pencil-square"></i> Delete</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }

        </div>
    </div>
}

@code {
    public bool IsProcessing = true;
    private IEnumerable<Category> Categories { get; set; } = new List<Category>();
    private int DeleteCategoryId { get; set; } = 0;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            await LoadCategories();
            IsProcessing = false;
            StateHasChanged();
        }
    }
    private async Task LoadCategories()
    {
        Categories = await _CategoryRepository.GetAllAsync();
    }

    private void HandleDelete(int Id)
    {
        DeleteCategoryId = Id;
        _JS.InvokeVoidAsync("ShowConfirmationModal");
    }

    private async Task ConfirmDelete_Click(bool IsConfirmed)
    {
        IsProcessing = true;
        await _JS.InvokeVoidAsync("HideConfirmationModal");
        if(IsConfirmed && DeleteCategoryId != 0)
        {
            var result = await _CategoryRepository.DeleteAsync(DeleteCategoryId);
            if(result)
                _JS?.ToastrSuccess("Category Deleted Succesfully");
            else
                _JS?.ToastrError("Category Deleted Succesfully");

                await LoadCategories();
        }
        DeleteCategoryId = 0;
        IsProcessing = false;
    }
}
